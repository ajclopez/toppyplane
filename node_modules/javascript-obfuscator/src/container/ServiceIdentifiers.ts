export enum ServiceIdentifiers {
    Factory__ICalleeDataExtractor = 'Factory<ICalleeDataExtractor>',
    Factory__IControlFlowCustomNode = 'Factory<IControlFlowCustomNode>',
    Factory__IControlFlowReplacer = 'Factory<IControlFlowReplacer>',
    Factory__ICustomNode = 'Factory<ICustomNode>',
    Factory__ICustomNodeGroup = 'Factory<ICustomNodeGroup>',
    Factory__IIdentifierNamesGenerator = 'Factory<IIdentifierNamesGenerator>',
    Factory__IIdentifierObfuscatingReplacer = 'Factory<IIdentifierObfuscatingReplacer>',
    Factory__INodeGuard = 'Factory<INodeGuard>',
    Factory__INodeTransformer = 'Factory<INodeTransformer[]>',
    Factory__IObfuscationResult = 'Factory<IObfuscationResult>',
    Factory__IObfuscatingReplacer = 'Factory<IObfuscatingReplacer>',
    Factory__TControlFlowStorage = 'Factory<TControlFlowStorage>',
    IArrayUtils = 'IArrayUtils',
    ICalleeDataExtractor = 'ICalleeDataExtractor',
    ICryptUtils = 'ICryptUtils',
    ICustomNode = 'ICustomNode',
    ICustomNodeGroup = 'ICustomNodeGroup',
    IControlFlowReplacer = 'IControlFlowReplacer',
    IEscapeSequenceEncoder = 'IEscapeSequenceEncoder',
    IIdentifierNamesGenerator = 'IIdentifierNamesGenerator',
    IIdentifierObfuscatingReplacer = 'IIdentifierObfuscatingReplacer',
    IJavaScriptObfuscator = 'IJavaScriptObfuscator',
    ILogger = 'ILogger',
    INodeGuard = 'INodeGuard',
    INodeTransformer = 'INodeTransformer',
    IObfuscationEventEmitter = 'IObfuscationEventEmitter',
    IObfuscationResult = 'IObfuscationResult',
    IOptions = 'IOptions',
    IObfuscatingReplacer = 'IObfuscatingReplacer',
    IRandomGenerator = 'IRandomGenerator',
    ISourceCode = 'ISourceCode',
    ISourceMapCorrector = 'ISourceMapCorrector',
    IStackTraceAnalyzer = 'IStackTraceAnalyzer',
    ITransformersRunner = 'ITransformersRunner',
    Newable__ICustomNode = 'Newable<ICustomNode>',
    Newable__TControlFlowStorage = 'Newable<TControlFlowStorage>',
    TCustomNodeGroupStorage = 'TCustomNodeGroupStorage',
    TStringArrayStorage = 'TStringArrayStorage'
}
